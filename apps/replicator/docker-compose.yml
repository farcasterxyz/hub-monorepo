version: '3.9'

services:
  replicator:
    image: farcasterxyz/replicator:latest
    restart: unless-stopped
    init: true
    command: ['node', 'build/app.js', 'start']
    environment:
      - LOG_LEVEL
      - HUB_HOST
      - HUB_SSL
      - POSTGRES_URL
      - REDIS_URL
      - STATSD_HOST
      - COLORIZE
      - WEB_UI_PORT
      - CONCURRENCY
      - PARTITIONS
    ports:
      - '${WEB_UI_PORT}:${WEB_UI_PORT}'
    volumes:
      - app-node_modules:/home/node/app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - replicator-network

  postgres:
    image: 'postgres:16-alpine'
    restart: unless-stopped
    ports:
      - '6541:5432' # Use a port unlikely to be in use so the example "Just Works"
    environment:
      - POSTGRES_DB=replicator
      - POSTGRES_USER=replicator
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      # Need to specify name/user to avoid `FATAL: role "root" does not exist` errors in logs
      test: ['CMD-SHELL', 'env', 'pg_isready', '--dbname', '$$POSTGRES_DB', '-U', '$$POSTGRES_USER']
      interval: 10s
      timeout: 10s
      retries: 3
    networks:
      - replicator-network

  redis:
    image: 'redis:7.2-alpine'
    restart: unless-stopped
    command: --save 1 1 --loglevel warning --maxmemory-policy noeviction
    volumes:
      - redis-data:/data
    ports:
      - '16379:6379'
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli', 'ping']
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 5s
    networks:
      - replicator-network

  statsd:
    image: graphiteapp/graphite-statsd:1.1.10-5
    restart: unless-stopped
    ports:
      # - '80:80' # Graphite web
      # - '2003:2003' # Carbon line receiver
      # - '2004:2004' # Carbon pickle receiver
      # - '7002:7002' # Carbon cache query
      - '18125:8125/udp' # StatsD
      - '18126:8126' # StatsD admin
    networks:
      - replicator-network

  grafana:
    image: grafana/grafana:10.0.3
    restart: unless-stopped
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    ports:
      - '9001:3000' # Grafana web
    networks:
      - replicator-network

volumes:
  app-node_modules:
  postgres-data:
  redis-data:

networks:
  replicator-network:
