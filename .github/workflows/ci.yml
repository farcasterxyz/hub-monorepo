name: CI
on:
  # CI is run on main because new branches can only access caches from master, not previous branches.
  # So building on master allows new PR's to get the cache from before.
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  MALACHITE_GIT_REF: "13bca14cd209d985c3adf101a02924acde8723a5"

# prevent multiple simultaneous test runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 25

    strategy:
      matrix:
        arch: ['arm64', 'x64']
        node_version: [22, 24]

    runs-on: ['runs-on=${{ github.run_id }}', 'runner=4cpu-linux-${{ matrix.arch }}']
    name: test (Node ${{ matrix.node_version }}, ${{ matrix.arch }})

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: shuttle
          POSTGRES_PASSWORD: password
          POSTGRES_DB: shuttle
        ports:
          - 6541:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:7
        ports:
          - 16379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      # Make sure this matches what we do locally and what we build with our Docker image
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: 1.85.1

      - uses: actions/checkout@v4
        with:
          repository: informalsystems/malachite
          ref: ${{ env.MALACHITE_GIT_REF }}
          path: ./malachite

      - uses: actions/checkout@v4
        with:
          repository: CassOnMars/eth-signature-verifier
          path: ./eth-signature-verifier

      - uses: actions/checkout@v4
        with:
          repository: farcasterxyz/snapchain
          path: ./snapchain

      - uses: actions/checkout@v4
        with:
          path: ./hub

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}

      - name: Restore cached dependencies for Node modules.
        id: module-cache
        uses: actions/cache@v4
        with:
          path: ./hub/node_modules
          key: ${{ runner.os }}-${{ runner.arch }}--node--${{ matrix.node_version}}--${{ hashFiles('./hub/yarn.lock') }}

      - name: Cache Cargo registry and git
        uses: actions/cache@v4
        with:
          path: |
            ./hub/.cargo/registry
            ./hub/.cargo/git
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-registry-${{ hashFiles('./hub/apps/hubble/src/addon/Cargo.lock') }}

      - name: Cache Cargo build artifacts
        uses: actions/cache@v4
        with:
          path: ./hub/apps/hubble/src/addon/target
          key: ${{ runner.os }}-${{ runner.arch }}-cargo-build-${{ hashFiles('./hub/apps/hubble/src/addon/Cargo.lock') }}

      - name: Install Protocol Buffer Compiler
        uses: arduino/setup-protoc@v3
        with:
          path: ./hub
          version: "24.4"

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install dependencies
        working-directory: ./hub
        run: yarn install

      - name: Run build
        working-directory: ./hub
        run: yarn build

      - name: Run linter
        working-directory: ./hub
        run: yarn lint:ci

      - name: Run tests
        working-directory: ./hub
        run: yarn test:ci

      - name: Upload coverage results
        continue-on-error: true # Don't fail the build if codecov fails
        timeout-minutes: 1
        uses: codecov/codecov-action@v4
        with:
          path: ./hub

