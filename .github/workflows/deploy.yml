
name: Deployment Pipeline

on:
  push:
    branches: [ main ]

jobs:
#First we will see the application build or not , then we will deploy in EC2
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Docker buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
#    - name: Extract metadata (tags, labels) for Docker
#      id: meta
#      uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#      with:
#        images: kyranstar/hubble
    - name: Build Docker image
      id: docker-image
      uses: docker/build-push-action@v4
      with:
        push: true
        cache-from: type=gha
        cache-to: type=gha,type=inline
        context: .
        file: Dockerfile.hubble
        tags: kyranstar/hubble:test

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
            DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
            DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
            SSH_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
            ALCHEMY_HTTPS_KEY: ${{ secrets.ALCHEMY_HTTPS_KEY }}
            ARGS: ""
            SOURCE: "./"
            REMOTE_HOST: ${{ secrets.HOSTNAME  }}
            REMOTE_USER: ${{ secrets.USER_NAME  }}
            TARGET: "/home/ubuntu/hub-monorepo"
            EXCLUDE: ""
            SCRIPT_AFTER: |
              cd /home/ubuntu/hub-monorepo
              git checkout main
              git fetch --all
              git reset --hard origin/main
              git pull origin main
              echo ${{ secrets.DOCKERHUB_USERNAME }}
              echo "Hello"
              sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
              sudo docker stop hub
              sudo docker rm hub
              sudo docker run --name hub --detach -p2282:2282 -p2283:2283 kyranstar/hubble:test sh -c 'node build/cli.js identity create && node build/cli.js start --rpc-port 2283 --ip 0.0.0.0 --gossip-port 2282 --eth-rpc-url ${{ secrets.ALCHEMY_HTTPS_KEY }} --network 2 --bootstrap /dns/testnet1.farcaster.xyz/tcp/2282'
