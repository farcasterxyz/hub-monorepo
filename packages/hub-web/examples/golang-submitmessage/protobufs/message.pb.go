// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.15.3
// source: message.proto

package protobufs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// * Type of hashing scheme used to produce a digest of MessageData
type HashScheme int32

const (
	HashScheme_HASH_SCHEME_NONE   HashScheme = 0
	HashScheme_HASH_SCHEME_BLAKE3 HashScheme = 1 // Default scheme for hashing MessageData
)

// Enum value maps for HashScheme.
var (
	HashScheme_name = map[int32]string{
		0: "HASH_SCHEME_NONE",
		1: "HASH_SCHEME_BLAKE3",
	}
	HashScheme_value = map[string]int32{
		"HASH_SCHEME_NONE":   0,
		"HASH_SCHEME_BLAKE3": 1,
	}
)

func (x HashScheme) Enum() *HashScheme {
	p := new(HashScheme)
	*p = x
	return p
}

func (x HashScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HashScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[0].Descriptor()
}

func (HashScheme) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[0]
}

func (x HashScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HashScheme.Descriptor instead.
func (HashScheme) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

// * Type of signature scheme used to sign the Message hash
type SignatureScheme int32

const (
	SignatureScheme_SIGNATURE_SCHEME_NONE    SignatureScheme = 0
	SignatureScheme_SIGNATURE_SCHEME_ED25519 SignatureScheme = 1 // Ed25519 signature (default)
	SignatureScheme_SIGNATURE_SCHEME_EIP712  SignatureScheme = 2 // ECDSA signature using EIP-712 scheme
)

// Enum value maps for SignatureScheme.
var (
	SignatureScheme_name = map[int32]string{
		0: "SIGNATURE_SCHEME_NONE",
		1: "SIGNATURE_SCHEME_ED25519",
		2: "SIGNATURE_SCHEME_EIP712",
	}
	SignatureScheme_value = map[string]int32{
		"SIGNATURE_SCHEME_NONE":    0,
		"SIGNATURE_SCHEME_ED25519": 1,
		"SIGNATURE_SCHEME_EIP712":  2,
	}
)

func (x SignatureScheme) Enum() *SignatureScheme {
	p := new(SignatureScheme)
	*p = x
	return p
}

func (x SignatureScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[1].Descriptor()
}

func (SignatureScheme) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[1]
}

func (x SignatureScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureScheme.Descriptor instead.
func (SignatureScheme) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

// * Type of the MessageBody
type MessageType int32

const (
	MessageType_MESSAGE_TYPE_NONE                         MessageType = 0
	MessageType_MESSAGE_TYPE_CAST_ADD                     MessageType = 1 // Add a new Cast
	MessageType_MESSAGE_TYPE_CAST_REMOVE                  MessageType = 2 // Remove an existing Cast
	MessageType_MESSAGE_TYPE_REACTION_ADD                 MessageType = 3 // Add a Reaction to a Cast
	MessageType_MESSAGE_TYPE_REACTION_REMOVE              MessageType = 4 // Remove a Reaction from a Cast
	MessageType_MESSAGE_TYPE_LINK_ADD                     MessageType = 5 // Add a new Link
	MessageType_MESSAGE_TYPE_LINK_REMOVE                  MessageType = 6 // Remove an existing Link
	MessageType_MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS MessageType = 7 // Add a Verification of an Ethereum Address
	MessageType_MESSAGE_TYPE_VERIFICATION_REMOVE          MessageType = 8 // Remove a Verification
	// Deprecated
	// MESSAGE_TYPE_SIGNER_ADD = 9; // Add a new Ed25519 key pair that signs messages for a user
	// MESSAGE_TYPE_SIGNER_REMOVE = 10; // Remove an Ed25519 key pair that signs messages for a user
	MessageType_MESSAGE_TYPE_USER_DATA_ADD  MessageType = 11 // Add metadata about a user
	MessageType_MESSAGE_TYPE_USERNAME_PROOF MessageType = 12 // Add or replace a username proof
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MESSAGE_TYPE_NONE",
		1:  "MESSAGE_TYPE_CAST_ADD",
		2:  "MESSAGE_TYPE_CAST_REMOVE",
		3:  "MESSAGE_TYPE_REACTION_ADD",
		4:  "MESSAGE_TYPE_REACTION_REMOVE",
		5:  "MESSAGE_TYPE_LINK_ADD",
		6:  "MESSAGE_TYPE_LINK_REMOVE",
		7:  "MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS",
		8:  "MESSAGE_TYPE_VERIFICATION_REMOVE",
		11: "MESSAGE_TYPE_USER_DATA_ADD",
		12: "MESSAGE_TYPE_USERNAME_PROOF",
	}
	MessageType_value = map[string]int32{
		"MESSAGE_TYPE_NONE":                         0,
		"MESSAGE_TYPE_CAST_ADD":                     1,
		"MESSAGE_TYPE_CAST_REMOVE":                  2,
		"MESSAGE_TYPE_REACTION_ADD":                 3,
		"MESSAGE_TYPE_REACTION_REMOVE":              4,
		"MESSAGE_TYPE_LINK_ADD":                     5,
		"MESSAGE_TYPE_LINK_REMOVE":                  6,
		"MESSAGE_TYPE_VERIFICATION_ADD_ETH_ADDRESS": 7,
		"MESSAGE_TYPE_VERIFICATION_REMOVE":          8,
		"MESSAGE_TYPE_USER_DATA_ADD":                11,
		"MESSAGE_TYPE_USERNAME_PROOF":               12,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[2].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[2]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

// * Farcaster network the message is intended for
type FarcasterNetwork int32

const (
	FarcasterNetwork_FARCASTER_NETWORK_NONE    FarcasterNetwork = 0
	FarcasterNetwork_FARCASTER_NETWORK_MAINNET FarcasterNetwork = 1 // Public primary network
	FarcasterNetwork_FARCASTER_NETWORK_TESTNET FarcasterNetwork = 2 // Public test network
	FarcasterNetwork_FARCASTER_NETWORK_DEVNET  FarcasterNetwork = 3 // Private test network
)

// Enum value maps for FarcasterNetwork.
var (
	FarcasterNetwork_name = map[int32]string{
		0: "FARCASTER_NETWORK_NONE",
		1: "FARCASTER_NETWORK_MAINNET",
		2: "FARCASTER_NETWORK_TESTNET",
		3: "FARCASTER_NETWORK_DEVNET",
	}
	FarcasterNetwork_value = map[string]int32{
		"FARCASTER_NETWORK_NONE":    0,
		"FARCASTER_NETWORK_MAINNET": 1,
		"FARCASTER_NETWORK_TESTNET": 2,
		"FARCASTER_NETWORK_DEVNET":  3,
	}
)

func (x FarcasterNetwork) Enum() *FarcasterNetwork {
	p := new(FarcasterNetwork)
	*p = x
	return p
}

func (x FarcasterNetwork) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FarcasterNetwork) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[3].Descriptor()
}

func (FarcasterNetwork) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[3]
}

func (x FarcasterNetwork) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FarcasterNetwork.Descriptor instead.
func (FarcasterNetwork) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

// * Type of UserData
type UserDataType int32

const (
	UserDataType_USER_DATA_TYPE_NONE     UserDataType = 0
	UserDataType_USER_DATA_TYPE_PFP      UserDataType = 1 // Profile Picture for the user
	UserDataType_USER_DATA_TYPE_DISPLAY  UserDataType = 2 // Display Name for the user
	UserDataType_USER_DATA_TYPE_BIO      UserDataType = 3 // Bio for the user
	UserDataType_USER_DATA_TYPE_URL      UserDataType = 5 // URL of the user
	UserDataType_USER_DATA_TYPE_USERNAME UserDataType = 6 // Preferred Name for the user
)

// Enum value maps for UserDataType.
var (
	UserDataType_name = map[int32]string{
		0: "USER_DATA_TYPE_NONE",
		1: "USER_DATA_TYPE_PFP",
		2: "USER_DATA_TYPE_DISPLAY",
		3: "USER_DATA_TYPE_BIO",
		5: "USER_DATA_TYPE_URL",
		6: "USER_DATA_TYPE_USERNAME",
	}
	UserDataType_value = map[string]int32{
		"USER_DATA_TYPE_NONE":     0,
		"USER_DATA_TYPE_PFP":      1,
		"USER_DATA_TYPE_DISPLAY":  2,
		"USER_DATA_TYPE_BIO":      3,
		"USER_DATA_TYPE_URL":      5,
		"USER_DATA_TYPE_USERNAME": 6,
	}
)

func (x UserDataType) Enum() *UserDataType {
	p := new(UserDataType)
	*p = x
	return p
}

func (x UserDataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserDataType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[4].Descriptor()
}

func (UserDataType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[4]
}

func (x UserDataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserDataType.Descriptor instead.
func (UserDataType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

// * Type of Reaction
type ReactionType int32

const (
	ReactionType_REACTION_TYPE_NONE   ReactionType = 0
	ReactionType_REACTION_TYPE_LIKE   ReactionType = 1 // Like the target cast
	ReactionType_REACTION_TYPE_RECAST ReactionType = 2 // Share target cast to the user's audience
)

// Enum value maps for ReactionType.
var (
	ReactionType_name = map[int32]string{
		0: "REACTION_TYPE_NONE",
		1: "REACTION_TYPE_LIKE",
		2: "REACTION_TYPE_RECAST",
	}
	ReactionType_value = map[string]int32{
		"REACTION_TYPE_NONE":   0,
		"REACTION_TYPE_LIKE":   1,
		"REACTION_TYPE_RECAST": 2,
	}
)

func (x ReactionType) Enum() *ReactionType {
	p := new(ReactionType)
	*p = x
	return p
}

func (x ReactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_message_proto_enumTypes[5].Descriptor()
}

func (ReactionType) Type() protoreflect.EnumType {
	return &file_message_proto_enumTypes[5]
}

func (x ReactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReactionType.Descriptor instead.
func (ReactionType) EnumDescriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

// *
// A Message is a delta operation on the Farcaster network. The message protobuf is an envelope
// that wraps a MessageData object and contains a hash and signature which can verify its authenticity.
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data            *MessageData    `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                                                    // Contents of the message
	Hash            []byte          `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`                                                                    // Hash digest of data
	HashScheme      HashScheme      `protobuf:"varint,3,opt,name=hash_scheme,json=hashScheme,proto3,enum=HashScheme" json:"hash_scheme,omitempty"`                     // Hash scheme that produced the hash digest
	Signature       []byte          `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`                                                          // Signature of the hash digest
	SignatureScheme SignatureScheme `protobuf:"varint,5,opt,name=signature_scheme,json=signatureScheme,proto3,enum=SignatureScheme" json:"signature_scheme,omitempty"` // Signature scheme that produced the signature
	Signer          []byte          `protobuf:"bytes,6,opt,name=signer,proto3" json:"signer,omitempty"`                                                                // Public key or address of the key pair that produced the signature
	DataBytes       []byte          `protobuf:"bytes,7,opt,name=data_bytes,json=dataBytes,proto3,oneof" json:"data_bytes,omitempty"`                                   // MessageData serialized to bytes if using protobuf serialization other than ts-proto
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetData() *MessageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Message) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *Message) GetHashScheme() HashScheme {
	if x != nil {
		return x.HashScheme
	}
	return HashScheme_HASH_SCHEME_NONE
}

func (x *Message) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Message) GetSignatureScheme() SignatureScheme {
	if x != nil {
		return x.SignatureScheme
	}
	return SignatureScheme_SIGNATURE_SCHEME_NONE
}

func (x *Message) GetSigner() []byte {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *Message) GetDataBytes() []byte {
	if x != nil {
		return x.DataBytes
	}
	return nil
}

// *
// A MessageData object contains properties common to all messages and wraps a body object which
// contains properties specific to the MessageType.
type MessageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      MessageType      `protobuf:"varint,1,opt,name=type,proto3,enum=MessageType" json:"type,omitempty"`            // Type of message contained in the body
	Fid       uint64           `protobuf:"varint,2,opt,name=fid,proto3" json:"fid,omitempty"`                               // Farcaster ID of the user producing the message
	Timestamp uint32           `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                   // Farcaster epoch timestamp in seconds
	Network   FarcasterNetwork `protobuf:"varint,4,opt,name=network,proto3,enum=FarcasterNetwork" json:"network,omitempty"` // Farcaster network the message is intended for
	// Types that are assignable to Body:
	//
	//	*MessageData_CastAddBody
	//	*MessageData_CastRemoveBody
	//	*MessageData_ReactionBody
	//	*MessageData_VerificationAddEthAddressBody
	//	*MessageData_VerificationRemoveBody
	//	*MessageData_UserDataBody
	//	*MessageData_LinkBody
	//	*MessageData_UsernameProofBody
	Body isMessageData_Body `protobuf_oneof:"body"`
}

func (x *MessageData) Reset() {
	*x = MessageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageData) ProtoMessage() {}

func (x *MessageData) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageData.ProtoReflect.Descriptor instead.
func (*MessageData) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageData) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_NONE
}

func (x *MessageData) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *MessageData) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MessageData) GetNetwork() FarcasterNetwork {
	if x != nil {
		return x.Network
	}
	return FarcasterNetwork_FARCASTER_NETWORK_NONE
}

func (m *MessageData) GetBody() isMessageData_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *MessageData) GetCastAddBody() *CastAddBody {
	if x, ok := x.GetBody().(*MessageData_CastAddBody); ok {
		return x.CastAddBody
	}
	return nil
}

func (x *MessageData) GetCastRemoveBody() *CastRemoveBody {
	if x, ok := x.GetBody().(*MessageData_CastRemoveBody); ok {
		return x.CastRemoveBody
	}
	return nil
}

func (x *MessageData) GetReactionBody() *ReactionBody {
	if x, ok := x.GetBody().(*MessageData_ReactionBody); ok {
		return x.ReactionBody
	}
	return nil
}

func (x *MessageData) GetVerificationAddEthAddressBody() *VerificationAddEthAddressBody {
	if x, ok := x.GetBody().(*MessageData_VerificationAddEthAddressBody); ok {
		return x.VerificationAddEthAddressBody
	}
	return nil
}

func (x *MessageData) GetVerificationRemoveBody() *VerificationRemoveBody {
	if x, ok := x.GetBody().(*MessageData_VerificationRemoveBody); ok {
		return x.VerificationRemoveBody
	}
	return nil
}

func (x *MessageData) GetUserDataBody() *UserDataBody {
	if x, ok := x.GetBody().(*MessageData_UserDataBody); ok {
		return x.UserDataBody
	}
	return nil
}

func (x *MessageData) GetLinkBody() *LinkBody {
	if x, ok := x.GetBody().(*MessageData_LinkBody); ok {
		return x.LinkBody
	}
	return nil
}

func (x *MessageData) GetUsernameProofBody() *UserNameProof {
	if x, ok := x.GetBody().(*MessageData_UsernameProofBody); ok {
		return x.UsernameProofBody
	}
	return nil
}

type isMessageData_Body interface {
	isMessageData_Body()
}

type MessageData_CastAddBody struct {
	CastAddBody *CastAddBody `protobuf:"bytes,5,opt,name=cast_add_body,json=castAddBody,proto3,oneof"`
}

type MessageData_CastRemoveBody struct {
	CastRemoveBody *CastRemoveBody `protobuf:"bytes,6,opt,name=cast_remove_body,json=castRemoveBody,proto3,oneof"`
}

type MessageData_ReactionBody struct {
	ReactionBody *ReactionBody `protobuf:"bytes,7,opt,name=reaction_body,json=reactionBody,proto3,oneof"`
}

type MessageData_VerificationAddEthAddressBody struct {
	VerificationAddEthAddressBody *VerificationAddEthAddressBody `protobuf:"bytes,9,opt,name=verification_add_eth_address_body,json=verificationAddEthAddressBody,proto3,oneof"`
}

type MessageData_VerificationRemoveBody struct {
	VerificationRemoveBody *VerificationRemoveBody `protobuf:"bytes,10,opt,name=verification_remove_body,json=verificationRemoveBody,proto3,oneof"`
}

type MessageData_UserDataBody struct {
	// SignerAddBody signer_add_body = 11; // Deprecated
	UserDataBody *UserDataBody `protobuf:"bytes,12,opt,name=user_data_body,json=userDataBody,proto3,oneof"`
}

type MessageData_LinkBody struct {
	// SignerRemoveBody signer_remove_body = 13; // Deprecated
	LinkBody *LinkBody `protobuf:"bytes,14,opt,name=link_body,json=linkBody,proto3,oneof"`
}

type MessageData_UsernameProofBody struct {
	UsernameProofBody *UserNameProof `protobuf:"bytes,15,opt,name=username_proof_body,json=usernameProofBody,proto3,oneof"`
}

func (*MessageData_CastAddBody) isMessageData_Body() {}

func (*MessageData_CastRemoveBody) isMessageData_Body() {}

func (*MessageData_ReactionBody) isMessageData_Body() {}

func (*MessageData_VerificationAddEthAddressBody) isMessageData_Body() {}

func (*MessageData_VerificationRemoveBody) isMessageData_Body() {}

func (*MessageData_UserDataBody) isMessageData_Body() {}

func (*MessageData_LinkBody) isMessageData_Body() {}

func (*MessageData_UsernameProofBody) isMessageData_Body() {}

// * Adds metadata about a user
type UserDataBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  UserDataType `protobuf:"varint,1,opt,name=type,proto3,enum=UserDataType" json:"type,omitempty"` // Type of metadata
	Value string       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                  // Value of the metadata
}

func (x *UserDataBody) Reset() {
	*x = UserDataBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDataBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDataBody) ProtoMessage() {}

func (x *UserDataBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDataBody.ProtoReflect.Descriptor instead.
func (*UserDataBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{2}
}

func (x *UserDataBody) GetType() UserDataType {
	if x != nil {
		return x.Type
	}
	return UserDataType_USER_DATA_TYPE_NONE
}

func (x *UserDataBody) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Embed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Embed:
	//
	//	*Embed_Url
	//	*Embed_CastId
	Embed isEmbed_Embed `protobuf_oneof:"embed"`
}

func (x *Embed) Reset() {
	*x = Embed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Embed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Embed) ProtoMessage() {}

func (x *Embed) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Embed.ProtoReflect.Descriptor instead.
func (*Embed) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{3}
}

func (m *Embed) GetEmbed() isEmbed_Embed {
	if m != nil {
		return m.Embed
	}
	return nil
}

func (x *Embed) GetUrl() string {
	if x, ok := x.GetEmbed().(*Embed_Url); ok {
		return x.Url
	}
	return ""
}

func (x *Embed) GetCastId() *CastId {
	if x, ok := x.GetEmbed().(*Embed_CastId); ok {
		return x.CastId
	}
	return nil
}

type isEmbed_Embed interface {
	isEmbed_Embed()
}

type Embed_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}

type Embed_CastId struct {
	CastId *CastId `protobuf:"bytes,2,opt,name=cast_id,json=castId,proto3,oneof"`
}

func (*Embed_Url) isEmbed_Embed() {}

func (*Embed_CastId) isEmbed_Embed() {}

// * Adds a new Cast
type CastAddBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmbedsDeprecated []string `protobuf:"bytes,1,rep,name=embeds_deprecated,json=embedsDeprecated,proto3" json:"embeds_deprecated,omitempty"` // URLs to be embedded in the cast
	Mentions         []uint64 `protobuf:"varint,2,rep,packed,name=mentions,proto3" json:"mentions,omitempty"`                                 // Fids mentioned in the cast
	// Types that are assignable to Parent:
	//
	//	*CastAddBody_ParentCastId
	//	*CastAddBody_ParentUrl
	Parent            isCastAddBody_Parent `protobuf_oneof:"parent"`
	Text              string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`                                                            // Text of the cast
	MentionsPositions []uint32             `protobuf:"varint,5,rep,packed,name=mentions_positions,json=mentionsPositions,proto3" json:"mentions_positions,omitempty"` // Positions of the mentions in the text
	Embeds            []*Embed             `protobuf:"bytes,6,rep,name=embeds,proto3" json:"embeds,omitempty"`                                                        // URLs or cast ids to be embedded in the cast
}

func (x *CastAddBody) Reset() {
	*x = CastAddBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastAddBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastAddBody) ProtoMessage() {}

func (x *CastAddBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastAddBody.ProtoReflect.Descriptor instead.
func (*CastAddBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{4}
}

func (x *CastAddBody) GetEmbedsDeprecated() []string {
	if x != nil {
		return x.EmbedsDeprecated
	}
	return nil
}

func (x *CastAddBody) GetMentions() []uint64 {
	if x != nil {
		return x.Mentions
	}
	return nil
}

func (m *CastAddBody) GetParent() isCastAddBody_Parent {
	if m != nil {
		return m.Parent
	}
	return nil
}

func (x *CastAddBody) GetParentCastId() *CastId {
	if x, ok := x.GetParent().(*CastAddBody_ParentCastId); ok {
		return x.ParentCastId
	}
	return nil
}

func (x *CastAddBody) GetParentUrl() string {
	if x, ok := x.GetParent().(*CastAddBody_ParentUrl); ok {
		return x.ParentUrl
	}
	return ""
}

func (x *CastAddBody) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CastAddBody) GetMentionsPositions() []uint32 {
	if x != nil {
		return x.MentionsPositions
	}
	return nil
}

func (x *CastAddBody) GetEmbeds() []*Embed {
	if x != nil {
		return x.Embeds
	}
	return nil
}

type isCastAddBody_Parent interface {
	isCastAddBody_Parent()
}

type CastAddBody_ParentCastId struct {
	ParentCastId *CastId `protobuf:"bytes,3,opt,name=parent_cast_id,json=parentCastId,proto3,oneof"` // Parent cast of the cast
}

type CastAddBody_ParentUrl struct {
	ParentUrl string `protobuf:"bytes,7,opt,name=parent_url,json=parentUrl,proto3,oneof"` // Parent URL
}

func (*CastAddBody_ParentCastId) isCastAddBody_Parent() {}

func (*CastAddBody_ParentUrl) isCastAddBody_Parent() {}

// * Removes an existing Cast
type CastRemoveBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetHash []byte `protobuf:"bytes,1,opt,name=target_hash,json=targetHash,proto3" json:"target_hash,omitempty"` // Hash of the cast to remove
}

func (x *CastRemoveBody) Reset() {
	*x = CastRemoveBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastRemoveBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastRemoveBody) ProtoMessage() {}

func (x *CastRemoveBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastRemoveBody.ProtoReflect.Descriptor instead.
func (*CastRemoveBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{5}
}

func (x *CastRemoveBody) GetTargetHash() []byte {
	if x != nil {
		return x.TargetHash
	}
	return nil
}

// * Identifier used to look up a Cast
type CastId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fid  uint64 `protobuf:"varint,1,opt,name=fid,proto3" json:"fid,omitempty"`  // Fid of the user who created the cast
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"` // Hash of the cast
}

func (x *CastId) Reset() {
	*x = CastId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CastId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CastId) ProtoMessage() {}

func (x *CastId) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CastId.ProtoReflect.Descriptor instead.
func (*CastId) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{6}
}

func (x *CastId) GetFid() uint64 {
	if x != nil {
		return x.Fid
	}
	return 0
}

func (x *CastId) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

// * Adds or removes a Reaction from a Cast
type ReactionBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ReactionType `protobuf:"varint,1,opt,name=type,proto3,enum=ReactionType" json:"type,omitempty"` // Type of reaction
	// Types that are assignable to Target:
	//
	//	*ReactionBody_TargetCastId
	//	*ReactionBody_TargetUrl
	Target isReactionBody_Target `protobuf_oneof:"target"`
}

func (x *ReactionBody) Reset() {
	*x = ReactionBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReactionBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReactionBody) ProtoMessage() {}

func (x *ReactionBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReactionBody.ProtoReflect.Descriptor instead.
func (*ReactionBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{7}
}

func (x *ReactionBody) GetType() ReactionType {
	if x != nil {
		return x.Type
	}
	return ReactionType_REACTION_TYPE_NONE
}

func (m *ReactionBody) GetTarget() isReactionBody_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *ReactionBody) GetTargetCastId() *CastId {
	if x, ok := x.GetTarget().(*ReactionBody_TargetCastId); ok {
		return x.TargetCastId
	}
	return nil
}

func (x *ReactionBody) GetTargetUrl() string {
	if x, ok := x.GetTarget().(*ReactionBody_TargetUrl); ok {
		return x.TargetUrl
	}
	return ""
}

type isReactionBody_Target interface {
	isReactionBody_Target()
}

type ReactionBody_TargetCastId struct {
	TargetCastId *CastId `protobuf:"bytes,2,opt,name=target_cast_id,json=targetCastId,proto3,oneof"` // CastId of the Cast to react to
}

type ReactionBody_TargetUrl struct {
	TargetUrl string `protobuf:"bytes,3,opt,name=target_url,json=targetUrl,proto3,oneof"` // URL to react to
}

func (*ReactionBody_TargetCastId) isReactionBody_Target() {}

func (*ReactionBody_TargetUrl) isReactionBody_Target() {}

// * Adds a Verification of ownership of an Ethereum Address
type VerificationAddEthAddressBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address          []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`                                            // Ethereum address being verified
	EthSignature     []byte `protobuf:"bytes,2,opt,name=eth_signature,json=ethSignature,proto3" json:"eth_signature,omitempty"`              // Signature produced by the user's Ethereum address
	BlockHash        []byte `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                       // Hash of the latest Ethereum block when the signature was produced
	VerificationType uint32 `protobuf:"varint,4,opt,name=verification_type,json=verificationType,proto3" json:"verification_type,omitempty"` // Type of verification. 0 = EOA, 1 = contract
	ChainId          uint32 `protobuf:"varint,5,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`                            // 0 for EOA verifications, 1 or 10 for contract verifications
}

func (x *VerificationAddEthAddressBody) Reset() {
	*x = VerificationAddEthAddressBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationAddEthAddressBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationAddEthAddressBody) ProtoMessage() {}

func (x *VerificationAddEthAddressBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationAddEthAddressBody.ProtoReflect.Descriptor instead.
func (*VerificationAddEthAddressBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{8}
}

func (x *VerificationAddEthAddressBody) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *VerificationAddEthAddressBody) GetEthSignature() []byte {
	if x != nil {
		return x.EthSignature
	}
	return nil
}

func (x *VerificationAddEthAddressBody) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *VerificationAddEthAddressBody) GetVerificationType() uint32 {
	if x != nil {
		return x.VerificationType
	}
	return 0
}

func (x *VerificationAddEthAddressBody) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

// * Removes a Verification of any type
type VerificationRemoveBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []byte `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"` // Address of the Verification to remove
}

func (x *VerificationRemoveBody) Reset() {
	*x = VerificationRemoveBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationRemoveBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationRemoveBody) ProtoMessage() {}

func (x *VerificationRemoveBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationRemoveBody.ProtoReflect.Descriptor instead.
func (*VerificationRemoveBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{9}
}

func (x *VerificationRemoveBody) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

// * Adds or removes a Link
type LinkBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type             string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`                                // Type of link, <= 8 characters
	DisplayTimestamp *uint32 `protobuf:"varint,2,opt,name=displayTimestamp,proto3,oneof" json:"displayTimestamp,omitempty"` // User-defined timestamp that preserves original timestamp when message.data.timestamp needs to be updated for compaction
	// Types that are assignable to Target:
	//
	//	*LinkBody_TargetFid
	Target isLinkBody_Target `protobuf_oneof:"target"`
}

func (x *LinkBody) Reset() {
	*x = LinkBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkBody) ProtoMessage() {}

func (x *LinkBody) ProtoReflect() protoreflect.Message {
	mi := &file_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkBody.ProtoReflect.Descriptor instead.
func (*LinkBody) Descriptor() ([]byte, []int) {
	return file_message_proto_rawDescGZIP(), []int{10}
}

func (x *LinkBody) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LinkBody) GetDisplayTimestamp() uint32 {
	if x != nil && x.DisplayTimestamp != nil {
		return *x.DisplayTimestamp
	}
	return 0
}

func (m *LinkBody) GetTarget() isLinkBody_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *LinkBody) GetTargetFid() uint64 {
	if x, ok := x.GetTarget().(*LinkBody_TargetFid); ok {
		return x.TargetFid
	}
	return 0
}

type isLinkBody_Target interface {
	isLinkBody_Target()
}

type LinkBody_TargetFid struct {
	TargetFid uint64 `protobuf:"varint,3,opt,name=target_fid,json=targetFid,proto3,oneof"` // The fid the link relates to
}

func (*LinkBody_TargetFid) isLinkBody_Target() {}

var File_message_proto protoreflect.FileDescriptor

var file_message_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x14, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x93, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x20, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x48,
	0x61, 0x73, 0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x53,
	0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x9f, 0x05, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x66, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2b, 0x0a,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x46, 0x61, 0x72, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x32, 0x0a, 0x0d, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x3b,
	0x0a, 0x10, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x34, 0x0a, 0x0d, 0x72,
	0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64,
	0x79, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x6a, 0x0a, 0x21, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x61, 0x64, 0x64, 0x5f, 0x65, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x45, 0x74,
	0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x1d,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x45,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x53, 0x0a,
	0x18, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x16, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x35, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x28, 0x0a, 0x09, 0x6c, 0x69, 0x6e,
	0x6b, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c,
	0x69, 0x6e, 0x6b, 0x42, 0x6f, 0x64, 0x79, 0x48, 0x00, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x40, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6f, 0x66, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6f, 0x66,
	0x48, 0x00, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x6f,
	0x66, 0x42, 0x6f, 0x64, 0x79, 0x42, 0x06, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x22, 0x47, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x05, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x12,
	0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52,
	0x06, 0x63, 0x61, 0x73, 0x74, 0x49, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x6d, 0x62, 0x65, 0x64,
	0x22, 0x95, 0x02, 0x0a, 0x0b, 0x43, 0x61, 0x73, 0x74, 0x41, 0x64, 0x64, 0x42, 0x6f, 0x64, 0x79,
	0x12, 0x2b, 0x0a, 0x11, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x73, 0x44, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x04, 0x52,
	0x08, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x2d, 0x0a, 0x12, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x11, 0x6d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x45, 0x6d, 0x62, 0x65, 0x64, 0x52, 0x06, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x73, 0x42, 0x08,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x31, 0x0a, 0x0e, 0x43, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x22, 0x2e, 0x0a, 0x06, 0x43,
	0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x66, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x22, 0x8d, 0x01, 0x0a, 0x0c,
	0x52, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x21, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x2f, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64,
	0x48, 0x00, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x61, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xc5, 0x01, 0x0a, 0x1d,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x45,
	0x74, 0x68, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x74, 0x68, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c,
	0x65, 0x74, 0x68, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x08, 0x4c, 0x69, 0x6e, 0x6b,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x10, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0a, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x46, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x3a, 0x0a, 0x0a, 0x48, 0x61, 0x73,
	0x68, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x48, 0x41, 0x53, 0x48, 0x5f,
	0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x42, 0x4c, 0x41,
	0x4b, 0x45, 0x33, 0x10, 0x01, 0x2a, 0x67, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x49, 0x47, 0x4e,
	0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45,
	0x5f, 0x53, 0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x45, 0x44, 0x32, 0x35, 0x35, 0x31, 0x39, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x55, 0x52, 0x45, 0x5f, 0x53,
	0x43, 0x48, 0x45, 0x4d, 0x45, 0x5f, 0x45, 0x49, 0x50, 0x37, 0x31, 0x32, 0x10, 0x02, 0x2a, 0xed,
	0x02, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15,
	0x0a, 0x11, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x01,
	0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52,
	0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x03, 0x12, 0x20, 0x0a,
	0x1c, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x04, 0x12,
	0x19, 0x0a, 0x15, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x49, 0x4e, 0x4b, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x5f,
	0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x06, 0x12, 0x2d, 0x0a, 0x29, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x45, 0x54, 0x48, 0x5f, 0x41, 0x44,
	0x44, 0x52, 0x45, 0x53, 0x53, 0x10, 0x07, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x08, 0x12, 0x1e, 0x0a,
	0x1a, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x0b, 0x12, 0x1f, 0x0a,
	0x1b, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x10, 0x0c, 0x2a, 0x8a,
	0x01, 0x0a, 0x10, 0x46, 0x61, 0x72, 0x63, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x12, 0x1a, 0x0a, 0x16, 0x46, 0x41, 0x52, 0x43, 0x41, 0x53, 0x54, 0x45, 0x52,
	0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x1d, 0x0a, 0x19, 0x46, 0x41, 0x52, 0x43, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x54,
	0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4d, 0x41, 0x49, 0x4e, 0x4e, 0x45, 0x54, 0x10, 0x01, 0x12, 0x1d,
	0x0a, 0x19, 0x46, 0x41, 0x52, 0x43, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x54, 0x57,
	0x4f, 0x52, 0x4b, 0x5f, 0x54, 0x45, 0x53, 0x54, 0x4e, 0x45, 0x54, 0x10, 0x02, 0x12, 0x1c, 0x0a,
	0x18, 0x46, 0x41, 0x52, 0x43, 0x41, 0x53, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f,
	0x52, 0x4b, 0x5f, 0x44, 0x45, 0x56, 0x4e, 0x45, 0x54, 0x10, 0x03, 0x2a, 0xa8, 0x01, 0x0a, 0x0c,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13,
	0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41,
	0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x46, 0x50, 0x10, 0x01, 0x12, 0x1a, 0x0a,
	0x16, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x59, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x49, 0x4f, 0x10,
	0x03, 0x12, 0x16, 0x0a, 0x12, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x52, 0x4c, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x53, 0x45, 0x52,
	0x4e, 0x41, 0x4d, 0x45, 0x10, 0x06, 0x2a, 0x58, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16,
	0x0a, 0x12, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4c, 0x49, 0x4b, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x43, 0x41, 0x53, 0x54, 0x10, 0x02,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_proto_rawDescOnce sync.Once
	file_message_proto_rawDescData = file_message_proto_rawDesc
)

func file_message_proto_rawDescGZIP() []byte {
	file_message_proto_rawDescOnce.Do(func() {
		file_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_proto_rawDescData)
	})
	return file_message_proto_rawDescData
}

var file_message_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_message_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_message_proto_goTypes = []interface{}{
	(HashScheme)(0),                       // 0: HashScheme
	(SignatureScheme)(0),                  // 1: SignatureScheme
	(MessageType)(0),                      // 2: MessageType
	(FarcasterNetwork)(0),                 // 3: FarcasterNetwork
	(UserDataType)(0),                     // 4: UserDataType
	(ReactionType)(0),                     // 5: ReactionType
	(*Message)(nil),                       // 6: Message
	(*MessageData)(nil),                   // 7: MessageData
	(*UserDataBody)(nil),                  // 8: UserDataBody
	(*Embed)(nil),                         // 9: Embed
	(*CastAddBody)(nil),                   // 10: CastAddBody
	(*CastRemoveBody)(nil),                // 11: CastRemoveBody
	(*CastId)(nil),                        // 12: CastId
	(*ReactionBody)(nil),                  // 13: ReactionBody
	(*VerificationAddEthAddressBody)(nil), // 14: VerificationAddEthAddressBody
	(*VerificationRemoveBody)(nil),        // 15: VerificationRemoveBody
	(*LinkBody)(nil),                      // 16: LinkBody
	(*UserNameProof)(nil),                 // 17: UserNameProof
}
var file_message_proto_depIdxs = []int32{
	7,  // 0: Message.data:type_name -> MessageData
	0,  // 1: Message.hash_scheme:type_name -> HashScheme
	1,  // 2: Message.signature_scheme:type_name -> SignatureScheme
	2,  // 3: MessageData.type:type_name -> MessageType
	3,  // 4: MessageData.network:type_name -> FarcasterNetwork
	10, // 5: MessageData.cast_add_body:type_name -> CastAddBody
	11, // 6: MessageData.cast_remove_body:type_name -> CastRemoveBody
	13, // 7: MessageData.reaction_body:type_name -> ReactionBody
	14, // 8: MessageData.verification_add_eth_address_body:type_name -> VerificationAddEthAddressBody
	15, // 9: MessageData.verification_remove_body:type_name -> VerificationRemoveBody
	8,  // 10: MessageData.user_data_body:type_name -> UserDataBody
	16, // 11: MessageData.link_body:type_name -> LinkBody
	17, // 12: MessageData.username_proof_body:type_name -> UserNameProof
	4,  // 13: UserDataBody.type:type_name -> UserDataType
	12, // 14: Embed.cast_id:type_name -> CastId
	12, // 15: CastAddBody.parent_cast_id:type_name -> CastId
	9,  // 16: CastAddBody.embeds:type_name -> Embed
	5,  // 17: ReactionBody.type:type_name -> ReactionType
	12, // 18: ReactionBody.target_cast_id:type_name -> CastId
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_message_proto_init() }
func file_message_proto_init() {
	if File_message_proto != nil {
		return
	}
	file_username_proof_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDataBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Embed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastAddBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastRemoveBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CastId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReactionBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationAddEthAddressBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationRemoveBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_message_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MessageData_CastAddBody)(nil),
		(*MessageData_CastRemoveBody)(nil),
		(*MessageData_ReactionBody)(nil),
		(*MessageData_VerificationAddEthAddressBody)(nil),
		(*MessageData_VerificationRemoveBody)(nil),
		(*MessageData_UserDataBody)(nil),
		(*MessageData_LinkBody)(nil),
		(*MessageData_UsernameProofBody)(nil),
	}
	file_message_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Embed_Url)(nil),
		(*Embed_CastId)(nil),
	}
	file_message_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CastAddBody_ParentCastId)(nil),
		(*CastAddBody_ParentUrl)(nil),
	}
	file_message_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ReactionBody_TargetCastId)(nil),
		(*ReactionBody_TargetUrl)(nil),
	}
	file_message_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*LinkBody_TargetFid)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_proto_goTypes,
		DependencyIndexes: file_message_proto_depIdxs,
		EnumInfos:         file_message_proto_enumTypes,
		MessageInfos:      file_message_proto_msgTypes,
	}.Build()
	File_message_proto = out.File
	file_message_proto_rawDesc = nil
	file_message_proto_goTypes = nil
	file_message_proto_depIdxs = nil
}
