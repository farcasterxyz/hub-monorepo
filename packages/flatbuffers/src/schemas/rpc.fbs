include "message.fbs";

// IDL file for Farcaster RPC Requests

namespace Farcaster;

enum EventType: uint8 {
  MergeMessage = 0,
  PruneMessage = 1,
  RevokeMessage = 2,
  MergeIdRegistryEvent = 3,
  MergeNameRegistryEvent = 4
}

// Responses
table MessageBytes {
  message_bytes: [ubyte] (nested_flatbuffer: "Farcaster.Message", required);
}

table MessagesResponse {
  messages: [MessageBytes];
}

table FidsResponse {
  fids: [UserId];
}

table EventResponse {
  type: EventType;
  bytes: [ubyte];
}

// A partial trie node response
table TrieNodeMetadataResponse {
  prefix: [ubyte];
  num_messages: uint64;
  hash: [ubyte];
  children: [TrieNodeMetadataResponse]; 
}

table TrieNodeSnapshotResponse {
  prefix: string;
  excluded_hashes: [string];
  num_messages: uint64;
  root_hash: string;
}

// Cast Requests
table GetCastRequest {
  fid: [ubyte] (required);
  ts_hash: [ubyte] (required);
}

table GetCastsByFidRequest {
  fid: [ubyte] (required);
}

table GetCastsByParentRequest {
  parent: CastId (required);
}

table GetCastsByMentionRequest {
  mention: UserId (required);
}

// Amp Requests

table GetAmpRequest {
  fid: [ubyte] (required);
  user: UserId (required);
}

table GetAmpsByFidRequest {
  fid: [ubyte] (required);
}

table GetAmpsByUserRequest {
  user: UserId (required);
}

// Reaction Requests

table GetReactionRequest {
  fid: [ubyte] (required);
  type: ReactionType = 1;
  cast: CastId (required);
}

table GetReactionsByFidRequest {
  fid: [ubyte] (required);
  type: ReactionType = null;
}

table GetReactionsByCastRequest {
  cast: CastId (required);
  type: ReactionType = null;
}

// Verification Requests

table GetVerificationRequest {
  fid: [ubyte] (required);
  address: [ubyte] (required);
}

table GetVerificationsByFidRequest {
  fid: [ubyte] (required);
}

// Signer Requests

table GetSignerRequest {
  fid: [ubyte] (required);
  signer: [ubyte] (required);
}

table GetSignersByFidRequest {
  fid: [ubyte] (required);
}

table GetCustodyEventRequest {
  fid: [ubyte] (required);
}

table GetFidsRequest {}

// User Data Requests

table GetUserDataRequest {
  fid: [ubyte] (required);
  type: UserDataType = 1;
}

table GetUserDataByFidRequest {
  fid: [ubyte] (required);
}

table GetUserNameRequest {
  fid: [ubyte] (required);
}

// Sync Requests
table SyncIdHash {
  sync_id_hash: [ubyte] (required);
}

table GetAllMessagesBySyncIdsRequest {
  sync_ids: [SyncIdHash] (required);
}

table GetAllSyncIdsByPrefixResponse {
  ids: [string] (required);
}

table GetAllMessagesByFidRequest {
  fid: [ubyte] (required);
}

table GetTrieNodesByPrefixRequest {
  prefix: [ubyte] (required);
}

// Events Requests

table SubscribeRequest {}

