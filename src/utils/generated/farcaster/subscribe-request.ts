// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SubscribeRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SubscribeRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSubscribeRequest(bb:flatbuffers.ByteBuffer, obj?:SubscribeRequest):SubscribeRequest {
  return (obj || new SubscribeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSubscribeRequest(bb:flatbuffers.ByteBuffer, obj?:SubscribeRequest):SubscribeRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SubscribeRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static startSubscribeRequest(builder:flatbuffers.Builder) {
  builder.startObject(0);
}

static endSubscribeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSubscribeRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  SubscribeRequest.startSubscribeRequest(builder);
  return SubscribeRequest.endSubscribeRequest(builder);
}

unpack(): SubscribeRequestT {
  return new SubscribeRequestT();
}


unpackTo(_o: SubscribeRequestT): void {}
}

export class SubscribeRequestT {
constructor(){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SubscribeRequest.createSubscribeRequest(builder);
}
}
