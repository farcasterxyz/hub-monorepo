// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Message, MessageT } from '../farcaster/message';


export class UserContent {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):UserContent {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsUserContent(bb:flatbuffers.ByteBuffer, obj?:UserContent):UserContent {
  return (obj || new UserContent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsUserContent(bb:flatbuffers.ByteBuffer, obj?:UserContent):UserContent {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new UserContent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

message(obj?:Message):Message|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Message()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startUserContent(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, messageOffset, 0);
}

static endUserContent(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // message
  return offset;
}

static createUserContent(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset):flatbuffers.Offset {
  UserContent.startUserContent(builder);
  UserContent.addMessage(builder, messageOffset);
  return UserContent.endUserContent(builder);
}

unpack(): UserContentT {
  return new UserContentT(
    (this.message() !== null ? this.message()!.unpack() : null)
  );
}


unpackTo(_o: UserContentT): void {
  _o.message = (this.message() !== null ? this.message()!.unpack() : null);
}
}

export class UserContentT {
constructor(
  public message: MessageT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const message = (this.message !== null ? this.message!.pack(builder) : 0);

  return UserContent.createUserContent(builder,
    message
  );
}
}
