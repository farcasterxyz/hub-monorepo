// automatically generated by the FlatBuffers compiler, do not modify

import { ContactInfoContent, ContactInfoContentT } from '../farcaster/contact-info-content';
import { ContractEvent, ContractEventT } from '../farcaster/contract-event';
import { Message, MessageT } from '../farcaster/message';


export enum GossipContent {
  NONE = 0,
  Message = 1,
  ContractEvent = 2,
  ContactInfoContent = 3
}

export function unionToGossipContent(
  type: GossipContent,
  accessor: (obj:ContactInfoContent|ContractEvent|Message) => ContactInfoContent|ContractEvent|Message|null
): ContactInfoContent|ContractEvent|Message|null {
  switch(GossipContent[type]) {
    case 'NONE': return null; 
    case 'Message': return accessor(new Message())! as Message;
    case 'ContractEvent': return accessor(new ContractEvent())! as ContractEvent;
    case 'ContactInfoContent': return accessor(new ContactInfoContent())! as ContactInfoContent;
    default: return null;
  }
}

export function unionListToGossipContent(
  type: GossipContent, 
  accessor: (index: number, obj:ContactInfoContent|ContractEvent|Message) => ContactInfoContent|ContractEvent|Message|null, 
  index: number
): ContactInfoContent|ContractEvent|Message|null {
  switch(GossipContent[type]) {
    case 'NONE': return null; 
    case 'Message': return accessor(index, new Message())! as Message;
    case 'ContractEvent': return accessor(index, new ContractEvent())! as ContractEvent;
    case 'ContactInfoContent': return accessor(index, new ContactInfoContent())! as ContactInfoContent;
    default: return null;
  }
}
