// automatically generated by the FlatBuffers compiler, do not modify

import { ContactInfoContent, ContactInfoContentT } from '../farcaster/contact-info-content';
import { ContractEventContent, ContractEventContentT } from '../farcaster/contract-event-content';
import { UserContent, UserContentT } from '../farcaster/user-content';


export enum GossipContent {
  NONE = 0,
  UserContent = 1,
  ContractEventContent = 2,
  ContactInfoContent = 3
}

export function unionToGossipContent(
  type: GossipContent,
  accessor: (obj:ContactInfoContent|ContractEventContent|UserContent) => ContactInfoContent|ContractEventContent|UserContent|null
): ContactInfoContent|ContractEventContent|UserContent|null {
  switch(GossipContent[type]) {
    case 'NONE': return null; 
    case 'UserContent': return accessor(new UserContent())! as UserContent;
    case 'ContractEventContent': return accessor(new ContractEventContent())! as ContractEventContent;
    case 'ContactInfoContent': return accessor(new ContactInfoContent())! as ContactInfoContent;
    default: return null;
  }
}

export function unionListToGossipContent(
  type: GossipContent, 
  accessor: (index: number, obj:ContactInfoContent|ContractEventContent|UserContent) => ContactInfoContent|ContractEventContent|UserContent|null, 
  index: number
): ContactInfoContent|ContractEventContent|UserContent|null {
  switch(GossipContent[type]) {
    case 'NONE': return null; 
    case 'UserContent': return accessor(index, new UserContent())! as UserContent;
    case 'ContractEventContent': return accessor(index, new ContractEventContent())! as ContractEventContent;
    case 'ContactInfoContent': return accessor(index, new ContactInfoContent())! as ContactInfoContent;
    default: return null;
  }
}
