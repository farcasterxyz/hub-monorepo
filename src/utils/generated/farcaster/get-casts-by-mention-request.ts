// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { UserId, UserIdT } from '../farcaster/user-id';


export class GetCastsByMentionRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetCastsByMentionRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetCastsByMentionRequest(bb:flatbuffers.ByteBuffer, obj?:GetCastsByMentionRequest):GetCastsByMentionRequest {
  return (obj || new GetCastsByMentionRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetCastsByMentionRequest(bb:flatbuffers.ByteBuffer, obj?:GetCastsByMentionRequest):GetCastsByMentionRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetCastsByMentionRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

mention(obj?:UserId):UserId|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new UserId()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startGetCastsByMentionRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addMention(builder:flatbuffers.Builder, mentionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, mentionOffset, 0);
}

static endGetCastsByMentionRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // mention
  return offset;
}

static createGetCastsByMentionRequest(builder:flatbuffers.Builder, mentionOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetCastsByMentionRequest.startGetCastsByMentionRequest(builder);
  GetCastsByMentionRequest.addMention(builder, mentionOffset);
  return GetCastsByMentionRequest.endGetCastsByMentionRequest(builder);
}

unpack(): GetCastsByMentionRequestT {
  return new GetCastsByMentionRequestT(
    (this.mention() !== null ? this.mention()!.unpack() : null)
  );
}


unpackTo(_o: GetCastsByMentionRequestT): void {
  _o.mention = (this.mention() !== null ? this.mention()!.unpack() : null);
}
}

export class GetCastsByMentionRequestT {
constructor(
  public mention: UserIdT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const mention = (this.mention !== null ? this.mention!.pack(builder) : 0);

  return GetCastsByMentionRequest.createGetCastsByMentionRequest(builder,
    mention
  );
}
}
